{"version":3,"sources":["config/device.js","components/AuthorizationForm.js","views/Authorization.js","components/User.js","components/UserList.js","views/Users.js","components/App.js","reportWebVitals.js","config/theme.js","index.js"],"names":["device","mobile","tablet","FormWrapper","styled","form","TitleWrapper","div","Title","h2","props","theme","primaryColor","ErrorWrapper","ErrorMessage","p","errorColor","InputWrapper","Input","input","teriaryColor","ButtonWrapper","Btn","button","buttonFontColor","buttonHoverColor","LinksWrapper","StyledLink","a","secondaryColor","AuthorizationForm","state","username","password","formErrors","usernameValid","passwordValid","formValid","errorMessage","redirect","handleChange","bind","handleSubmit","event","name","target","value","this","setState","preventDefault","validateForm","validationErrors","length","test","parseInt","substr","errorToShow","logIn","data","options","method","headers","body","JSON","stringify","fetch","response","json","result","status","saveToken","token","localStorage","setItem","error","to","onSubmit","type","className","errorClass","onChange","placeholder","autocomplete","onClick","href","Component","Wrapper","Authorization","React","TableCell","td","tableBorderColor","User","dateFormat","require","user","id","first_name","last_name","is_active","last_login","is_superuser","Table","table","TableHeader","th","tableHeaderColor","Text","LoaderWrapper","UserList","users","filteredUsers","usernameFilter","loading","getUsers","url","tokenData","parse","console","log","window","location","replace","usersList","then","item","push","sortedArray","sortById","slice","arr","sort","b","filterByUsername","filter","filteredArr","indexOf","allUsers","map","color","timeout","height","width","Users","App","basename","pathname","path","component","exact","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb4f9f58.chunk.js","sourcesContent":["export const sizeMin = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tabletS: '640px',\n  tabletM: '768px',\n  laptop: '1000px',\n  desktop: '1280px',\n}\n\nexport const sizeMax = {\n  mobileS: '374px',\n  mobileM: '424px',\n  mobileL: '639px',\n  tabletS: '767px',\n  tabletM: '999px',\n  laptop: '1279px'\n}\n\n\nexport const device = {\n  mobile: `(max-width: ${sizeMax.mobileL})`,\n  tablet: `(min-width: ${sizeMin.tabletS})`\n};\n\n","import { React, Component } from 'react'\nimport styled from 'styled-components'\nimport { device } from '../config/device';\nimport { Redirect } from 'react-router-dom';\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n\n  @media ${device.tablet}  { \n    padding: 48px 40px 40px;\n    min-width: 350px;\n  }\n\n  @media ${device.mobile} { \n    padding: 28px 20px 20px;\n    min-width: 250px;\n  }\n`\n\nconst TitleWrapper = styled.div`\n  align-self: center;\n  \n  @media ${device.tablet} { \n    margin-bottom: 25px;\n  }\n\n  @media ${device.mobile} { \n    margin-bottom: 20px;\n  }\n`\n\nconst Title = styled.h2`\n  padding: 0;\n  margin: 0;\n  font-size: 35px;\n  font-weight: normal;\n  color: ${props => props.theme.primaryColor};\n`\n\n\nconst ErrorWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media ${device.tablet}  { \n    max-width: 350px;\n  }\n\n  @media ${device.mobile} { \n    max-width: 250px;\n  }\n\n`\n\nconst ErrorMessage = styled.p`  \n  padding: 0;\n  margin: 0;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 10px;\n  color: ${props => props.theme.errorColor};\n`\n\nconst InputWrapper = styled.div`\n  @media ${device.tablet} { \n    margin-bottom: 25px;\n  }\n\n  @media ${device.mobile} { \n    margin-bottom: 15px;\n  }\n`\n\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  border: 0;\n  border-bottom: 1px solid ${props => props.theme.teriaryColor};\n  width: 100%;\n\n  @media ${device.tablet} { \n    padding: 10px 15px;\n  }\n\n  @media ${device.mobile} { \n    padding: 7px 15px;\n  }\n\n  &.has-error {\n    border-bottom: 1px solid ${props => props.theme.errorColor};\n  }\n\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid ${props => props.theme.primaryColor};\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  @media ${device.tablet} { \n    margin-top: 30px;\n    margin-bottom: 12px;\n  }\n\n  @media ${device.mobile} { \n    margin-top: 12px;\n    margin-bottom: 12px;\n  }\n`\n\nconst Btn = styled.button`\n  border: none;\n  padding: 15px;\n  width: 100%;\n  background-color: ${props => props.theme.primaryColor};\n  color: ${props => props.theme.buttonFontColor};\n  text-transform: uppercase;\n  font-weight: 700;\n  line-height: 100%;\n  cursor: pointer;\n  transition: background 0.3s, brightness 0.1s;\n\n  &:hover {\n    background-color: ${props => props.theme.buttonHoverColor};\n  }\n\n  &:active {\n    filter: brightness(90%);\n  }\n\n  &:focus {\n    outline: 0;\n  }\n`\n\nconst LinksWrapper = styled.div`\n  display: flex;\n  @media ${device.tablet} { \n    justify-content: space-around;\n  }\n\n  @media ${device.mobile} { \n    margin: 0 4px;\n    justify-content: space-between;\n  }\n\n`\n\nconst StyledLink = styled.a`\n  font-size: 12px;\n  color: ${props => props.theme.primaryColor};\n  text-decoration: none;\n  cursor: pointer;\n\n  &:hover {\n    color: ${props => props.theme.secondaryColor}; \n    text-decoration: underline\n  }\n`\n\n\nexport default class AuthorizationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '', //'test_super',\n      password: '', //'Nf<U4f<rDbtDxAPn',\n      formErrors: { username: '', password: '' }, // Тексты подсказок для невалидных полей (если они есть)\n      usernameValid: false,\n      passwordValid: false,\n      formValid: false,\n      errorMessage: '', //Текст ошибки валидации, который будет отображаться\n      redirect: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) { // Метод обработки ввода логина или пароля\n    let name = event.target.name;\n    let value = event.target.value;\n\n    this.setState({ [name]: value }); //Сохраняем введенное в input значение\n  }\n\n  handleSubmit(event) { //Запускаем валидацию при нажатии кнопки\n    event.preventDefault();\n    this.validateForm()\n  }\n\n  validateForm() {\n    let validationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid;\n    let passwordValid = this.state.passwordValid;\n\n    //Проверяем валидность логина. Если логин не соответствует условию, сохраняем текст подсказки, которую будем отображать пользователю\n    if (!this.state.username) {\n      validationErrors.username = 'Введите логин'\n    } else if (this.state.username.length < 1 || this.state.username.length > 20) {\n      validationErrors.username = 'Логин должен содержать от 1 до 20 символов';\n    } else if (/^[a-zA-Z1-9-_]+$/.test(this.state.username) === false) {\n      validationErrors.username = 'Логин может содержать только латинские буквы, цифры, тире или знак подчеркивания';\n    } else if (parseInt(this.state.username.substr(0, 1))) {\n      validationErrors.username = 'Логин должен начинаться с буквы';\n    } else validationErrors.username = ''\n\n    //Проверяем валидность пароля\n    validationErrors.password = (!this.state.password) ? 'Введите пароль' : ''\n\n    //Поля валидны, если не было сохранено ни одного текста подсказки\n    usernameValid = (validationErrors.username === '') ? true : false;\n    passwordValid = (validationErrors.password === '') ? true : false;\n\n    //Если невалидны и логин и пароль, то отображаем текст подсказки для логина\n    let errorToShow = (validationErrors.username) ? validationErrors.username : validationErrors.password;\n\n    //Сохраняем результаты валидации\n    this.setState({\n      formErrors: validationErrors,\n      usernameValid: usernameValid,\n      passwordValid: passwordValid,\n      formValid: usernameValid && passwordValid,\n      errorMessage: errorToShow\n    }, () => {\n      if (this.state.formValid) { //Если форма валидна, отправляем запрос на сервер\n        this.logIn();\n      }\n    })\n  }\n\n\n  async logIn() { //Отправка запроса на сервер для аутентификации\n    let url = 'http://emphasoft-test-assignment.herokuapp.com/api-token-auth/';\n    let data = {\n      \"username\": this.state.username,\n      \"password\": this.state.password\n    }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(data)\n    };\n\n    let response = await fetch(url, options);\n    let result = await response.json();\n\n    // Если запрос выполнен успешно, сохраняем токен в LocalStorage и перенаправляем на страницу со списком пользователей\n    if (response.status === 200) {\n      this.saveToken(result['token']);\n      this.setState({ redirect: '/users' })\n    } else {\n      //Если запрос такое сочетание логин+пароль не найдено, отображаем пользователю подсказку\n      this.setState({\n        errorMessage: 'Неверное имя пользователя или пароль'\n      })\n    }\n  }\n\n  //сохранение токена в localStorage\n  saveToken(token) {\n    localStorage.setItem('tokenData', JSON.stringify(token));\n  }\n\n  //добавляем класс для невалидных полей input \n  errorClass(error) {\n    return (!error ? '' : 'has-error');\n  }\n\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <FormWrapper onSubmit={this.handleSubmit} >\n        <TitleWrapper>\n          <Title>Вход</Title>\n        </TitleWrapper>\n        <ErrorWrapper>\n          <ErrorMessage> {this.state.errorMessage} </ErrorMessage>\n        </ErrorWrapper>\n\n        <InputWrapper>\n          <Input type=\"text\" name=\"username\" value={this.state.username} className={this.errorClass(this.state.formErrors.username)} onChange={this.handleChange} placeholder=\"Логин\" autocomplete=\"on\" />\n        </InputWrapper>\n        <InputWrapper>\n          <Input type=\"password\" name=\"password\" value={this.state.password} className={this.errorClass(this.state.formErrors.password)} onChange={this.handleChange} placeholder=\"Пароль\" autocomplete=\"on\" />\n        </InputWrapper>\n        <ButtonWrapper >\n          <Btn type=\"submit\" onClick={this.handleSubmit} >Войти</Btn>\n        </ButtonWrapper>\n        <LinksWrapper>\n          <StyledLink href=\"#\">Забыли пароль?</StyledLink>\n          <StyledLink href=\"#\">Зарегистрироваться</StyledLink>\n        </LinksWrapper>\n      </FormWrapper>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport AuthorizationForm from '../components/AuthorizationForm'\n\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n\n`\n\nconst FormWrapper = styled.div`\n  margin-top: 15vh;\n`\n\nclass Authorization extends React.Component {\n\n  render() {\n    return (\n      <Wrapper>\n        <FormWrapper>\n          <AuthorizationForm />\n        </FormWrapper>\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default Authorization;\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst TableCell = styled.td`\n  box-sizing: border-box;\n  height: 30px;\n  padding: 5.5px;\n  border: 1px solid ${props => props.theme.tableBorderColor};\n`\n\n\nconst User = props => {\n  let dateFormat = require('dateformat');\n\n  return (\n    <tr>\n      <TableCell>{props.user.id}</TableCell>\n      <TableCell>{props.user.username}</TableCell>\n      <TableCell>{props.user.first_name}</TableCell>\n      <TableCell>{props.user.last_name}</TableCell>\n      <TableCell>{props.user.is_active ? 'Yes' : 'No'}</TableCell>\n      <TableCell>{props.user.last_login ? dateFormat(props.user.last_login, \"dd.mm.yyyy HH:MM:ss\") : ''}</TableCell>\n      <TableCell>{props.user.is_superuser ? 'Yes' : 'No'}</TableCell>\n    </tr>\n  )\n}\n\nexport default User;\n","import React from 'react'\nimport User from './User'\nimport styled from 'styled-components'\nimport { device } from '../config/device';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  border: 0;\n  border-bottom: 1px solid ${props => props.theme.teriaryColor};\n\n  @media ${device.tablet} { \n    padding: 10px 15px;\n    min-width: 220px;\n  }\n\n  @media ${device.mobile} { \n    font-size: 14px;\n    padding: 7px 15px;\n    min-width: 200px;\n  }\n\n   &:focus {\n    outline: none;\n    border-bottom: 1px solid ${props => props.theme.primaryColor};\n  }\n`\n\nconst InputWrapper = styled.div`\n  @media ${device.tablet} { \n    margin-bottom: 20px;\n  }\n\n  @media ${device.mobile} { \n    margin-bottom: 15px;\n  }\n`\n\nconst Table = styled.table`\n  border-collapse: collapse;\n   \n`\n\nconst TableHeader = styled.th`\n  border: 1px solid #${props => props.theme.tableHeaderColor};\n  padding: 11px 15px;\n  background-color: ${props => props.theme.tableHeaderColor};\n  color: ${props => props.theme.buttonFontColor};\n`\n\nconst Text = styled.p`\n  text-align: center;\n`\n\nconst LoaderWrapper = styled.p`\n  margin-top: 30px;\n  text-align: center;\n`\n\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: [],\n      filteredUsers: [],\n      usernameFilter: '',\n      loading: true //отвечает за отображение Loader'а\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getUsers();\n  }\n\n  async getUsers() { //метод получения списка пользователей с сервера\n    let url = 'http://emphasoft-test-assignment.herokuapp.com/api/v1/users/';\n\n    let token = null;\n\n    //проверяем, была ли до этого авторизация (сохранен ли токен в localStorage)\n    if (localStorage.tokenData) {\n      token = JSON.parse(localStorage.tokenData);\n    } else {\n      console.log('Токен не найден в local storage') //если токен не найден, перенаправляем на страницу авторизации\n      return window.location.replace('/');\n    }\n\n    let options = {\n      method: 'GET',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n    };\n\n    //если токен найден, помещаем его в заголовок запроса\n    if (token) { options.headers.Authorization = `Token ${token}`; }\n\n    let response = await fetch(url, options);\n    let result = response.json()\n\n    let usersList = [];\n\n    if (response.status === 200) { //если запрос выполнен успешно (список пользователей получен)\n      result.then(function (data) {\n        for (let item in data) {\n          usersList.push(data[item]) // сохраняем в массив полученные объекты\n        }\n      }).then((data) => {\n        let sortedArray = this.sortById(usersList.slice());  //сортируем массив пользователей по Id\n        this.setState({\n          users: sortedArray,   //сохраняем отсортированный массив пользователей\n          filteredUsers: sortedArray,\n          loading: false\n        });\n      }\n      );\n    } else {\n      console.log('Список пользователей не был получен')\n    }\n  }\n\n  sortById(arr) { // метод для сортировки массива пользователей по id\n    arr.sort((a, b) => a.id > b.id ? 1 : -1);\n    return arr.slice()\n  }\n\n  handleChange(event) { //обработка ввода в поле фильтрации\n    let name = event.target.name;\n    let value = event.target.value;\n\n    this.setState({ [name]: value });\n    this.filterByUsername(value);\n  }\n\n  filterByUsername(filter) { //метод для фильтрации списка пользователей по значению, введенному в поле фильтрации\n    let filteredArr = this.state.users.filter((user) => user.username.indexOf(filter) !== -1)\n    this.setState({ filteredUsers: filteredArr.slice() })\n  }\n\n  render() {\n    const allUsers = this.state.filteredUsers.map(user =>\n      <User key={user.id} user={user} />\n    )\n\n    return (\n      <>\n        <InputWrapper>\n          <Input type=\"text\" name=\"usernameFilter\" placeholder=\"Filter users by username...\" onChange={this.handleChange} />\n        </InputWrapper>\n\n        <Table>\n          <thead>\n            <tr>\n              <TableHeader>Id</TableHeader>\n              <TableHeader>Username</TableHeader>\n              <TableHeader>Last Name</TableHeader>\n              <TableHeader>First Name</TableHeader>\n              <TableHeader>Is Active</TableHeader>\n              <TableHeader>Last Login</TableHeader>\n              <TableHeader>Is Superuser</TableHeader>\n            </tr>\n          </thead>\n          <tbody>\n            {allUsers}\n          </tbody>\n        </Table>\n        <LoaderWrapper>\n          {this.state.loading && <Loader type=\"Oval\" color=\"#83a296\" timeout={2000} height={60} width={60} />}\n        </LoaderWrapper>\n\n        {this.state.filteredUsers.length === 0 && !this.state.loading && <Text>Username that contains <b>'{this.state.usernameFilter}'</b> not found</Text>}\n      </>\n    )\n  }\n}\n\nexport default UserList;","import React from 'react'\nimport styled from 'styled-components'\nimport UserList from '../components/UserList'\nimport { device } from '../config/device';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  box-sizing: border-box; \n  margin: 0 auto;\n\n  @media ${device.tablet} { \n    padding: 0 25px; \n    width: 1100px;\n  }\n\n  @media ${device.mobile} { \n    padding: 0 10px;\n  }\n`\n\nconst TitleWrapper = styled.div`\n  align-self: left;\n  \n  @media ${device.tablet} { \n    margin-top: 25px;\n    margin-bottom: 15px;\n  }\n\n  @media ${device.mobile} { \n    margin-top: 15px;\n    margin-bottom: 5px;\n  }\n`\n\nconst Title = styled.h2`\n  padding: 0;\n  margin: 0;\n  font-weight: normal;\n  color: ${props => props.theme.primaryColor};\n\n  @media ${device.tablet} { \n    font-size: 35px;\n  }\n\n  @media ${device.mobile} { \n    font-size: 33px;\n  }\n`\n\n\nclass Users extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <TitleWrapper>\n          <Title>All Users</Title>\n        </TitleWrapper>\n        <UserList />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Users;\n\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Authorization from '../views/Authorization'\nimport Users from '../views/Users'\n\nconst AppWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n\n`\n\nconst FormWrapper = styled.div`\n  margin-top: 15vh;\n`\n\nclass App extends React.PureComponent {\n  render() {\n    return (\n      <Router basename={window.location.pathname || ''}>\n        <Route path=\"/users\" component={Users} />\n        <Route exact path=\"/\" component={Authorization} />\n      </Router>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const white = '#ffffff'\nconst black = '#000000'\nconst gray = '#b3b3b3'\nconst cameo = '#C9987C'\nconst bizarre = '#E4D2C1'\nconst cinnabar = '#E04545'\nconst gainsboro = '#e3e3e3'\n\nconst green = '#83a296'\n\nexport const primaryColor = black\nexport const secondaryColor = cameo\nexport const buttonHoverColor = bizarre\nexport const teriaryColor = gray\nexport const errorColor = cinnabar\n\nexport const tableHeaderColor = green \nexport const tableBorderColor = gainsboro\n\n\nexport const buttonFontColor = white\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components'\nimport * as theme from './config/theme'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}